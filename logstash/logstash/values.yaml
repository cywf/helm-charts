# Default values for logstash.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

---
image:
  repository: docker.elastic.co/logstash/logstash
  tag: "7.16.3"
  pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    capabilities:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID

config:
  logstash.yml: |
    http.host: "0.0.0.0"
    xpack.monitoring.enabled: false
    xpack.management.enabled: false
  pipelines.yml: |
    - pipeline.id: test
      path.config: "/usr/share/logstash/pipeline/logstash.conf"
      pipeline.workers: 1
      pipeline.batch.size: 100
      pipeline.batch.delay: 50
      config.reload.automatic: true
      config.reload.interval: 30s
      dead_letter_queue.enable: true
      dead_letter_queue.max_bytes: 100mb
      dead_letter_queue.dead_letter_pipeline: "test-dead-letter"
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }

    filter {
      grok {
        match => { "message" => "%{COMBINEDAPACHELOG}" }
      }
      date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}" ]
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }

service:
  type: ClusterIP
  port: 5044

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  path: /logstash
  hosts:
    - logstash.example.com
  tls:
    - secretName: logstash-tls-secret
      hosts:
        - logstash.example.com

zerotier:
  networkID: <zerotier_network_id>
  token: <zerotier_api_token>

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 500Mi

nodeSelector:
  kubernetes.io/os: linux
  beta.kubernetes.io/arch: amd64
  kubernetes.io/hostname: logstash-node

tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - logstash
          topologyKey: "kubernetes.io/hostname"
