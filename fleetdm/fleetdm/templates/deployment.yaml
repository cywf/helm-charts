apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetdm.fullname" . }}
  labels:
    {{- include "fleetdm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetdm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetdm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetdm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetdm.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "fleetdm.name" . }}
    helm.sh/chart: {{ include "fleetdm.chart" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "fleetdm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "fleetdm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: fleetdm
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: FLEET_CONFIG
              value: /etc/fleet/config.yaml
            - name: FLEET_SERVER_PORT
              value: "8080"
            - name: FLEET_SERVER_URL
              value: http://localhost:8080
          volumeMounts:
            - name: config
              mountPath: /etc/fleet
            - name: varlog
              mountPath: /var/log/fleet
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
      volumes:
        - name: config
          configMap:
            name: {{ include "fleetdm.fullname" . }}-config
        - name: varlog
          emptyDir: {}
      initContainers:
        - name: zerotier-network
          image: quay.io/zerotier/zerotier-containerized:1.8.2
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: ZEROTIER_NETWORK
              value: "{{ .Values.zerotier.networkId }}"
          command: ["/usr/sbin/zerotier-one"]
          volumeMounts:
            - name: zerotier-one
              mountPath: /var/lib/zerotier-one
        - name: fleetdm-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name:
