# Default values for kibana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

---
image:
  repository: docker.elastic.co/kibana/kibana
  tag: "7.12.1"
  pullPolicy: IfNotPresent

nameOverride: "kibana"

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
  path: /
  hosts:
    - kibana.example.com
  tls:
    - secretName: kibana-tls
      hosts:
        - kibana.example.com

config:
  elasticsearch.hosts: http://elasticsearch:9200
  server.host: 0.0.0.0
  server.basePath: /kibana
  xpack.security.enabled: true
  xpack.security.sessionTimeout: 600000
  xpack.reporting.enabled: false
  xpack.encryptedSavedObjects.encryptionKey: "AbcdefghijklmnopqrstuvwxyZ123456"

env:
  ELASTICSEARCH_URL: http://elasticsearch:9200

resources:
  requests:
    cpu: 100m
    memory: 1Gi
  limits:
    cpu: 500m
    memory: 2Gi

zeroTier:
  networkID: "abcdef0123456789"

service:
  type: ClusterIP
  port: 5601

tolerations: []
affinity: {}
nodeSelector: {}
