# elm chart to deploy Security Onion and all its dependencies

apiVersion: v1
kind: Namespace
metadata:
  name: security-onion

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: security-onion
  namespace: security-onion

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: security-onion
rules:
  - apiGroups:
      - ""
      - "apps"
      - "extensions"
    resources:
      - "pods"
      - "services"
      - "deployments"
      - "replicasets"
    verbs:
      - "create"
      - "get"
      - "list"
      - "delete"
      - "update"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: security-onion
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: security-onion
subjects:
  - kind: ServiceAccount
    name: security-onion
    namespace: security-onion

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-onion-config
  namespace: security-onion
data:
  config.yaml: |
    # Security Onion configuration file
    # For more information, see https://github.com/Security-Onion-Solutions/security-onion/wiki/Configuration

    ### Set these variables to your desired values
    BASEURL: ""
    USERNAME: ""
    PASSWORD: ""
    LANGUAGE: ""

    ### Don't modify these variables
    MYSQL_HOST: so-db
    MYSQL_PORT: "3306"
    REDIS_HOST: so-redis
    REDIS_PORT: "6379"
    ES_HOST: so-es-client
    ES_PORT: "9200"
    KIBANA_HOST: so-kibana
    KIBANA_PORT: "5601"
    RABBITMQ_HOST: so-rabbitmq
    RABBITMQ_PORT: "5672"
    BROKER_URL: "amqp://${RABBITMQ_HOST}:${RABBITMQ_PORT}//"

---
apiVersion: v1
kind: Service
metadata:
  name: so-db
  namespace: security-onion
spec:
  selector:
    app: so-db
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: so-db
  namespace: security-onion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: so-db
  template:
    metadata:
      labels:
        app: so-db
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: so-db-secret
                  key: password
          ports:
            - containerPort: 3306
              name: mysql

---
apiVersion: v1
kind: Secret
metadata:
  name: so-db-secret
  namespace: security-onion
type: Opaque
data:
  password: <INSERT YOUR MYSQL ROOT PASSWORD HERE IN BASE64 ENCODING>

---
apiVersion: v1
kind: Service
metadata:
  name: so-redis
  namespace: security-onion
spec:
  selector:
    app: so-redis
  ports:
    - name: redis
      port: 637
